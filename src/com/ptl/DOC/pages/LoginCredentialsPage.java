package com.ptl.DOC.pages;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.testng.Assert;

import com.ptl.util.Constants;

public class LoginCredentialsPage {

	WebDriver driver;

	@FindBy(xpath = Constants.ExpUsername)
	WebElement expUsername;
	@FindBy(xpath = Constants.ExpPassword)
	WebElement expPassword;
	@FindBy(xpath = Constants.LogOutLink)
	WebElement logOut;
	@FindBy(xpath = Constants.ExpRegistrationNumber)
	WebElement expRegNumber;
	@FindBy(xpath = Constants.SuccessMessage)
	WebElement SuccessMessage2;
	@FindBy(xpath = Constants.RegNo)
	WebElement RegNo;
	public String expUsernameText = "";
	public String expPasswordText = "";

	public LoginCredentialsPage(WebDriver dr) {
		driver = dr;
	}

	public String getAutoGenExpUsername() {
		expUsernameText = expUsername.getText();
		System.out.println("Auto Gen Username " + expUsernameText);
		return expUsernameText;

		/*
		 * AutoGenUsername = expUsernameText; AutoGenPassword = expPasswordText;
		 */

	}

	public String getAutoGenExpPassword() {
		expPasswordText = expPassword.getText();
		System.out.println("Auto gen Password " + expPasswordText);
		return expPasswordText;

	}
	
	public void ReadExporterCredentials() {
		expUsernameText = expUsername.getText();
		expPasswordText = expPassword.getText();

		System.out.println("Auto Gen Username " + expUsernameText);
		System.out.println("Auto gen Password " + expPasswordText);

		/*
		 * AutoGenUsername = expUsernameText; AutoGenPassword = expPasswordText;
		 */

	}

	public void ReadExporterRegistrationNumber() {
		String ExpRegNo = expRegNumber.getAttribute("value");
		Assert.assertTrue(!ExpRegNo.isEmpty(),
				"Exporter Registration Number is not auto generated by the system");
	}

	public LoginPage doLogout() {
		logOut.click();
		LoginPage loginPage = PageFactory.initElements(driver, LoginPage.class);
		return loginPage;
	}

	public void getSuccessMessage() {
		System.out.println(SuccessMessage2.getText());
	}

	public void getRegNo() {
		String regNo = RegNo.getText();

		System.out.println(regNo);

		Assert.assertTrue(
				regNo.length() == 12 && regNo.matches("(D/COM/R/)[0-9]{5}"),
				"Exporter Registration No Format is invalid");

	}
}
